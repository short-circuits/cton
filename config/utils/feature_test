
echo $cton_n "checking for $feature_name ...$cton_c"

cat << END >> $CTON_AUTOCONF_ERR

----------------------------------------
checking for $feature_name

END

feature_found=no

if test -n "$feature_macroname"; then
    feature=`echo $feature_macroname \
                   | tr abcdefghijklmnopqrstuvwxyz ABCDEFGHIJKLMNOPQRSTUVWXYZ`
fi

feature=$feature_macro_name

cat << END > $CTON_AUTOTEST.c

#include <sys/types.h>
$CTON_INCLUDE_UNISTD_H
$feature_test_header

int main(void) {
    $feature_test_body;
    return 0;
}

END

cton_compile="$CC $feature_cflags $feature_inc_path \
          -o $CTON_AUTOTEST $CTON_AUTOTEST.c $feature_libs"

eval "/bin/sh -c \"$cton_compile\" >> $CTON_AUTOCONF_ERR 2>&1"


if [ -x $CTON_AUTOTEST ]; then

    case "$feature_run" in

        yes)
            # /bin/sh is used to intercept "Killed" or "Abort trap" messages
            if /bin/sh -c $CTON_AUTOTEST >> $CTON_AUTOCONF_ERR 2>&1; then
                echo " found"
                feature_found=yes

                if test -n "$feature_macro_name"; then
                    feature=$feature_macro_name value="1" . $CONFIG_DIR/utils/define
                fi

            else
                echo " found but is not working"
            fi
        ;;

        value)
            # /bin/sh is used to intercept "Killed" or "Abort trap" messages
            if /bin/sh -c $CTON_AUTOTEST >> $CTON_AUTOCONF_ERR 2>&1; then
                echo " found"
                feature_found=yes

                if test -n "$feature_macro_name"; then
                    feature=$feature_macro_name value=`$NGX_AUTOTEST` . $CONFIG_DIR/utils/define
                fi

            else
                echo " found but is not working"
            fi
        ;;

        *)
            echo " found"
            feature_found=yes

            if test -n "$feature_macro_name"; then
                feature=$feature_macro_name value="1" . $CONFIG_DIR/utils/define
            fi
        ;;

    esac

else
    echo " not found"

    echo "----------"    >> $CTON_AUTOCONF_ERR
    cat $CTON_AUTOTEST.c >> $CTON_AUTOCONF_ERR
    echo "----------"    >> $CTON_AUTOCONF_ERR
    echo $cton_compile   >> $CTON_AUTOCONF_ERR
    echo "----------"    >> $CTON_AUTOCONF_ERR
fi

rm -rf $CTON_AUTOTEST*

feature_name=
feature_macroname=
feature_run=
feature_test_header=
feature_test_body=
